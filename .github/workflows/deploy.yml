name: Build and deploy to VPS

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set IMAGE_TAG
        id: set-tag
        run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push Docker image (sha + latest)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USER }}/semstore-bot:${{ github.sha }}
            ${{ secrets.DOCKER_HUB_USER }}/semstore-bot:latest

  deploy-to-vps:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Ensure remote dir exists on VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            mkdir -p /semstore/sEmStote-bot-v2
            chown -R ${{ secrets.VPS_USER }} /semstore/sEmStote-bot-v2 || true

      - name: Upload docker-compose.prod.yml to VPS (as docker-compose.yml)
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          source: "docker-compose.prod.yml"
          target: "/semstore/sEmStote-bot-v2/docker-compose.yml"

      - name: Pull image and restart service on VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: 22
          script: |
            set -eux
            cd /semstore/sEmStote-bot-v2

            IMAGE_TAG=${{ github.sha }}
            IMAGE_FULL=${{ secrets.DOCKER_HUB_USER }}/semstore-bot:${IMAGE_TAG}

            docker pull "$IMAGE_FULL"

            IMAGE_TAG=$IMAGE_TAG docker-compose pull telegram-bot || true
            IMAGE_TAG=$IMAGE_TAG docker-compose up -d --no-deps --force-recreate telegram-bot

            docker image prune -f || true
